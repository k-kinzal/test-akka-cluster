{{- $root := . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "akka-cluster.fullname" . }}"
  labels:
    {{- include "akka-cluster.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    checksum/configmap-busybox: "{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}"
    {{- with .Values.annotations }}
    {{- toYaml .Values.annotations | nindent 4 }}
    {{- end }}
spec:
  {{- with .Values.replicaCount }}
  replicas: {{ . }}
  {{- end }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "akka-cluster.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "akka-cluster.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      serviceAccountName: "{{ .Values.serviceAccountName }}"
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tags }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command:
            {{- toYaml .Values.command | nindent 12 }}
          args:
            {{- if .Values.akka.config }}
            - "-Dconfig.file=/opt/conf/"
            {{- end }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          ports:
            - name: remoting
              containerPort: {{ .Values.akka.remote.port }}
              protocol: TCP
            {{- if .Values.akka.http.enabled }}
            - name: http
              containerPort: {{ .Values.akka.http.port }}
              protocol: TCP
            {{- end }}
            {{- if .Values.akka.management.enabled }}
            - name: management
              containerPort: {{ .Values.akka.management.port }}
              protocol: TCP
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          lifecycle:
            {{- toYaml .Values.lifecycle | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.akka.config }}
          volumeMounts:
            {{- range $name, $v := . }}
            - name: {{ $name | replace "." "-" | lower }}
              mountPath: /opt/conf
              subPath: {{ $name }}
            {{- end }}
          {{- end }}
      {{- with .Values.akka.config }}
      volumes:
        {{- range $name, $v := . }}
        - name: {{ $name | replace "." "-" | lower }}
          configMap:
            name: '{{ template "akka-cluster.fullname" $root }}-{{ $name | replace "." "-" | lower }}'
        {{- end }}
      {{- end }}
      restartPolicy: "{{ .Values.restartPolicy }}"
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
